#-----------------------------------------------------------
# Vivado v2016.1 (64-bit)
# SW Build 1538259 on Fri Apr  8 15:45:27 MDT 2016
# IP Build 1537824 on Fri Apr  8 04:28:57 MDT 2016
# Start of session at: Thu Jan 19 09:17:33 2017
# Process ID: 7760
# Current directory: D:/Projects/z_eth_2
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent7640 D:\Projects\z_eth_2\z_eth.xpr
# Log file: D:/Projects/z_eth_2/vivado.log
# Journal file: D:/Projects/z_eth_2\vivado.jou
#-----------------------------------------------------------
start_gui
open_project D:/Projects/z_eth_2/z_eth.xpr
update_compile_order -fileset sources_1
open_bd_design {D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd}
create_peripheral MasterPlayer user AXIS_Counter_Direct 1.0 -dir D:/Projects/CustomIP/AXIS_Counter
add_peripheral_interface S_AXI -interface_mode slave -axi_type lite [ipx::find_open_core MasterPlayer:user:AXIS_Counter_Direct:1.0]
add_peripheral_interface M_AXIS -interface_mode master -axi_type stream [ipx::find_open_core MasterPlayer:user:AXIS_Counter_Direct:1.0]
generate_peripheral -driver -bfm_example_design -debug_hw_example_design [ipx::find_open_core MasterPlayer:user:AXIS_Counter_Direct:1.0]
write_peripheral [ipx::find_open_core MasterPlayer:user:AXIS_Counter_Direct:1.0]
set_property  ip_repo_paths  {D:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0 D:/Projects/CustomIP/AXIS_Checker/AXI4_Stream_Checker_1.1 D:/Projects/CustomIP/Cores/axis_counter_2} [current_project]
update_ip_catalog -rebuild
ipx::edit_ip_in_project -upgrade true -name edit_AXIS_Counter_Direct_v1_0 -directory D:/Projects/CustomIP/AXIS_Counter d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/component.xml
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1
file mkdir D:/Projects/CustomIP/AXIS_Counter/edit_AXIS_Counter_Direct_v1_0.srcs/sources_1/new
close [ open D:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/hdl/axis_counter_stream.vhd w ]
add_files D:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/hdl/axis_counter_stream.vhd
update_compile_order -fileset sources_1
remove_files d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/hdl/AXIS_Counter_Direct_v1_0_M_AXIS.vhd
update_compile_order -fileset sources_1
remove_files d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/hdl/AXIS_Counter_Direct_v1_0.vhd
update_compile_order -fileset sim_1
close [ open D:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/hdl/AXI_Counter.vhd w ]
add_files D:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/hdl/AXI_Counter.vhd
update_compile_order -fileset sources_1
update_compile_order -fileset sources_1
# Disabling source management mode.  This is to allow the top design properties to be set without GUI intervention.
set_property source_mgmt_mode None [current_project]
set_property top AXI_Counter [current_fileset]
# Re-enabling previously disabled source management mode.
set_property source_mgmt_mode All [current_project]
update_compile_order -fileset sources_1
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1
launch_runs synth_1 -jobs 2
wait_on_run synth_1
reset_run synth_1
launch_runs synth_1 -jobs 2
wait_on_run synth_1
ipx::merge_project_changes files [ipx::current_core]
ipx::remove_user_parameter C_S_AXI_DATA_WIDTH [ipx::current_core]
ipx::remove_user_parameter C_M_AXIS_TDATA_WIDTH [ipx::current_core]
ipx::remove_user_parameter C_S_AXI_ADDR_WIDTH [ipx::current_core]
ipx::remove_user_parameter C_M_AXIS_START_COUNT [ipx::current_core]
ipx::remove_user_parameter C_S_AXI_BASEADDR [ipx::current_core]
ipx::remove_user_parameter C_S_AXI_HIGHADDR [ipx::current_core]
ipx::merge_project_changes hdl_parameters [ipx::current_core]
ipx::add_port_map TKEEP [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property physical_name M_AXIS_TKEEP [ipx::get_port_maps TKEEP -of_objects [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]]
ipx::remove_bus_interface M_AXIS_RST [ipx::current_core]
ipx::remove_bus_interface M_AXIS_CLK [ipx::current_core]
ipx::associate_bus_interfaces -busif M_AXIS -clock S_AXI_CLK [ipx::current_core]
ipx::associate_bus_interfaces -busif S_AXI -clock S_AXI_CLK [ipx::current_core]
ipx::remove_address_block_parameter OFFSET_BASE_PARAM [ipx::get_address_blocks S_AXI_reg -of_objects [ipx::get_memory_maps S_AXI -of_objects [ipx::current_core]]]
ipx::remove_address_block_parameter OFFSET_HIGH_PARAM [ipx::get_address_blocks S_AXI_reg -of_objects [ipx::get_memory_maps S_AXI -of_objects [ipx::current_core]]]
ipx::merge_project_changes hdl_parameters [ipx::current_core]
ipx::merge_project_changes hdl_parameters [ipx::current_core]
reset_run synth_1
launch_runs synth_1 -jobs 2
wait_on_run synth_1
set_property core_revision 2 [ipx::current_core]
ipx::create_xgui_files [ipx::current_core]
ipx::update_checksums [ipx::current_core]
ipx::save_core [ipx::current_core]
close_project -delete
update_ip_catalog -rebuild -repo_path d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0
delete_bd_objs [get_bd_intf_nets axi_interconnect_1_M02_AXI] [get_bd_intf_nets axis_counter_0_M_AXIS] [get_bd_cells axis_counter_0]
startgroup
create_bd_cell -type ip -vlnv MasterPlayer:user:AXIS_Counter_Direct:1.0 AXIS_Counter_Direct_0
endgroup
connect_bd_intf_net [get_bd_intf_pins AXIS_Counter_Direct_0/M_AXIS] [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM]
connect_bd_intf_net [get_bd_intf_pins AXIS_Counter_Direct_0/S_AXI] -boundary_type upper [get_bd_intf_pins axi_interconnect_1/M02_AXI]
set_property name axis_counter_direct [get_bd_cells AXIS_Counter_Direct_0]
assign_bd_address [get_bd_addr_segs {axis_counter_direct/S_AXI/S_AXI_reg }]
regenerate_bd_layout
validate_bd_design
connect_bd_net [get_bd_pins axis_counter_direct/s_axi_aclk] [get_bd_pins axi_timer_0/s_axi_aclk]
connect_bd_net [get_bd_pins axis_counter_direct/s_axi_aresetn] [get_bd_pins axi_timer_0/s_axi_aresetn]
regenerate_bd_layout
validate_bd_design
set_param general.maxThreads 4
save_bd_design
reset_run synth_1
reset_run z_eth_axi_ethernet_0_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
file copy -force D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.sysdef D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf

launch_sdk -workspace D:/Projects/z_eth_2/z_eth.sdk -hwspec D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
export_ip_user_files -of_objects [get_ips  z_eth_AXIS_Counter_Direct_0_0] -no_script -reset -quiet
upgrade_ip -vlnv MasterPlayer:user:AXIS_Counter_Direct:1.0 [get_ips  z_eth_AXIS_Counter_Direct_0_0] -log ip_upgrade.log
ipx::edit_ip_in_project -upgrade true -name AXIS_Counter_Direct_v1_0_project -directory D:/Projects/z_eth_2/z_eth.tmp/AXIS_Counter_Direct_v1_0_project d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/component.xml
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1
ipx::remove_memory_map S_AXI [ipx::current_core]
ipx::add_memory_map S_AXI [ipx::current_core]
set_property slave_memory_map_ref S_AXI [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
ipx::add_address_block s_axi_lite [ipx::get_memory_maps S_AXI -of_objects [ipx::current_core]]
set_property core_revision 3 [ipx::current_core]
ipx::create_xgui_files [ipx::current_core]
ipx::update_checksums [ipx::current_core]
ipx::save_core [ipx::current_core]
close_project -delete
update_ip_catalog -rebuild -repo_path d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0
export_ip_user_files -of_objects [get_ips  z_eth_AXIS_Counter_Direct_0_0] -no_script -reset -quiet
upgrade_ip -vlnv MasterPlayer:user:AXIS_Counter_Direct:1.0 [get_ips  z_eth_AXIS_Counter_Direct_0_0] -log ip_upgrade.log
delete_bd_objs [get_bd_intf_nets axi_interconnect_1_M02_AXI]
connect_bd_intf_net [get_bd_intf_pins axis_counter_direct/S_AXI] -boundary_type upper [get_bd_intf_pins axi_interconnect_1/M02_AXI]
assign_bd_address [get_bd_addr_segs {axis_counter_direct/S_AXI/s_axi_lite }]
report_ip_status -name ip_status 
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
file copy -force D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.sysdef D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf

open_bd_design {D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd}
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.1 ila_0
endgroup
startgroup
set_property -dict [list CONFIG.C_PROBE1_WIDTH {4} CONFIG.C_PROBE0_WIDTH {32} CONFIG.C_NUM_OF_PROBES {5} CONFIG.C_MONITOR_TYPE {Native} CONFIG.C_ENABLE_ILA_AXI_MON {false}] [get_bd_cells ila_0]
endgroup
connect_bd_net [get_bd_pins ila_0/probe0] [get_bd_pins axis_counter_direct/M_AXIS_TDATA]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TLAST] [get_bd_pins ila_0/probe2]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TKEEP] [get_bd_pins ila_0/probe1]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TVALID] [get_bd_pins ila_0/probe4]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TREADY] [get_bd_pins ila_0/probe3]
connect_bd_net [get_bd_pins ila_0/clk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk]
regenerate_bd_layout
validate_bd_design
delete_bd_objs [get_bd_intf_nets AXIS_Counter_Direct_0_M_AXIS]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TDATA] [get_bd_pins axi_dma_0/s_axis_s2mm_tdata]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TLAST] [get_bd_pins axi_dma_0/s_axis_s2mm_tlast]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TVALID] [get_bd_pins axi_dma_0/s_axis_s2mm_tvalid]
connect_bd_net [get_bd_pins axis_counter_direct/M_AXIS_TREADY] [get_bd_pins axi_dma_0/s_axis_s2mm_tready]
connect_bd_net [get_bd_pins axi_dma_0/s_axis_s2mm_tkeep] [get_bd_pins axis_counter_direct/M_AXIS_TKEEP]
regenerate_bd_layout
validate_bd_design
exclude_bd_addr_seg [get_bd_addr_segs processing_system7_0/Data/SEG_axis_counter_direct_s_axi_lite]
include_bd_addr_seg [get_bd_addr_segs -excluded processing_system7_0/Data/SEG_axis_counter_direct_s_axi_lite]
set_property offset 0x40000000 [get_bd_addr_segs {processing_system7_0/Data/SEG_axis_counter_direct_s_axi_lite}]
save_bd_design
reset_run synth_1
reset_run z_eth_axi_ethernet_0_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
open_bd_design {D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd}
set_param general.MaxThreads 4
file copy -force D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.sysdef D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf

ipx::edit_ip_in_project -upgrade true -name AXIS_Counter_Direct_v1_0_project -directory D:/Projects/z_eth_2/z_eth.tmp/AXIS_Counter_Direct_v1_0_project d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0/component.xml
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1
ipx::remove_bus_interface S_AXI [ipx::current_core]
ipx::remove_bus_interface M_AXIS [ipx::current_core]
ipx::add_bus_interface S_AXI [ipx::current_core]
set_property abstraction_type_vlnv xilinx.com:interface:aximm_rtl:1.0 [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property bus_type_vlnv xilinx.com:interface:aximm:1.0 [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property display_name S_AXI [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
ipx::add_port_map BVALID [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_bvalid [ipx::get_port_maps BVALID -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map RREADY [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_rready [ipx::get_port_maps RREADY -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map BREADY [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_bready [ipx::get_port_maps BREADY -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map AWVALID [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_awvalid [ipx::get_port_maps AWVALID -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map AWREADY [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_awready [ipx::get_port_maps AWREADY -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map AWPROT [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_awprot [ipx::get_port_maps AWPROT -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map WDATA [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_wdata [ipx::get_port_maps WDATA -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map RRESP [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_rresp [ipx::get_port_maps RRESP -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map ARPROT [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_arprot [ipx::get_port_maps ARPROT -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map RVALID [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_rvalid [ipx::get_port_maps RVALID -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map ARADDR [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_araddr [ipx::get_port_maps ARADDR -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map AWADDR [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_awaddr [ipx::get_port_maps AWADDR -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map ARREADY [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_arready [ipx::get_port_maps ARREADY -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map WVALID [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_wvalid [ipx::get_port_maps WVALID -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map WREADY [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_wready [ipx::get_port_maps WREADY -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map ARVALID [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_arvalid [ipx::get_port_maps ARVALID -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map WSTRB [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_wstrb [ipx::get_port_maps WSTRB -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map BRESP [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_bresp [ipx::get_port_maps BRESP -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_port_map RDATA [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
set_property physical_name s_axi_rdata [ipx::get_port_maps RDATA -of_objects [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]]
ipx::add_bus_interface M_AXIS [ipx::current_core]
set_property abstraction_type_vlnv xilinx.com:interface:axis_rtl:1.0 [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property bus_type_vlnv xilinx.com:interface:axis:1.0 [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property interface_mode master [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
ipx::add_port_map TDATA [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property physical_name M_AXIS_TDATA [ipx::get_port_maps TDATA -of_objects [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]]
ipx::add_port_map TVALID [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property physical_name M_AXIS_TVALID [ipx::get_port_maps TVALID -of_objects [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]]
ipx::add_port_map TKEEP [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property physical_name M_AXIS_TKEEP [ipx::get_port_maps TKEEP -of_objects [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]]
ipx::add_port_map TLAST [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property physical_name M_AXIS_TLAST [ipx::get_port_maps TLAST -of_objects [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]]
ipx::add_port_map TREADY [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]
set_property physical_name M_AXIS_TREADY [ipx::get_port_maps TREADY -of_objects [ipx::get_bus_interfaces M_AXIS -of_objects [ipx::current_core]]]
ipx::associate_bus_interfaces -busif S_AXI -clock S_AXI_CLK [ipx::current_core]
ipx::associate_bus_interfaces -busif M_AXIS -clock S_AXI_CLK [ipx::current_core]
ipx::remove_memory_map S_AXI [ipx::current_core]
ipx::add_memory_map S_AXI [ipx::current_core]
set_property slave_memory_map_ref S_AXI [ipx::get_bus_interfaces S_AXI -of_objects [ipx::current_core]]
ipx::add_address_block S_AXI_REG [ipx::get_memory_maps S_AXI -of_objects [ipx::current_core]]
set_property core_revision 4 [ipx::current_core]
ipx::create_xgui_files [ipx::current_core]
ipx::update_checksums [ipx::current_core]
ipx::save_core [ipx::current_core]
close_project -delete
update_ip_catalog -rebuild -repo_path d:/Projects/CustomIP/AXIS_Counter/AXIS_Counter_Direct_1.0
report_ip_status -name ip_status 
export_ip_user_files -of_objects [get_ips  z_eth_AXIS_Counter_Direct_0_0] -no_script -reset -quiet
upgrade_ip -vlnv MasterPlayer:user:AXIS_Counter_Direct:1.0 [get_ips  z_eth_AXIS_Counter_Direct_0_0] -log ip_upgrade.log
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
export_ip_user_files -of_objects [get_ips  z_eth_AXIS_Counter_Direct_0_0] -no_script -reset -quiet
upgrade_ip -vlnv MasterPlayer:user:AXIS_Counter_Direct:1.0 [get_ips  z_eth_AXIS_Counter_Direct_0_0] -log ip_upgrade.log
report_ip_status -name ip_status 
delete_bd_objs [get_bd_intf_nets axi_interconnect_1_M02_AXI]
connect_bd_intf_net [get_bd_intf_pins axis_counter_direct/S_AXI] -boundary_type upper [get_bd_intf_pins axi_interconnect_1/M02_AXI]
assign_bd_address
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
open_bd_design {D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd}
open_bd_design {D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd}
file copy -force D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.sysdef D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf

launch_sdk -workspace D:/Projects/z_eth_2/z_eth.sdk -hwspec D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf
open_hw
connect_hw_server -url localhost:3121
current_hw_target [get_hw_targets */xilinx_tcf/Xilinx/00001292902c01]
set_property PARAM.FREQUENCY 6000000 [get_hw_targets */xilinx_tcf/Xilinx/00001292902c01]
open_hw_target
set_property PROGRAM.FILE {D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.bit} [lindex [get_hw_devices] 1]
set_property PROBES.FILE {D:/Projects/z_eth_2/z_eth.runs/impl_1/debug_nets.ltx} [lindex [get_hw_devices] 1]
current_hw_device [lindex [get_hw_devices] 1]
refresh_hw_device [lindex [get_hw_devices] 1]
refresh_hw_device [lindex [get_hw_devices] 1]
display_hw_ila_data [ get_hw_ila_data hw_ila_data_1 -of_objects [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
run_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}] -trigger_now
wait_on_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]
display_hw_ila_data [upload_hw_ila_data [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
run_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}] -trigger_now
wait_on_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]
display_hw_ila_data [upload_hw_ila_data [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
run_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}] -trigger_now
wait_on_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]
display_hw_ila_data [upload_hw_ila_data [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
set_property PROBES.FILE {D:/Projects/z_eth_2/z_eth.runs/impl_1/debug_nets.ltx} [lindex [get_hw_devices] 1]
set_property PROGRAM.FILE {D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.bit} [lindex [get_hw_devices] 1]
program_hw_devices [lindex [get_hw_devices] 1]
refresh_hw_device [lindex [get_hw_devices] 1]
open_bd_design {D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd}
refresh_hw_device [lindex [get_hw_devices] 1]
display_hw_ila_data [ get_hw_ila_data hw_ila_data_1 -of_objects [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
run_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}] -trigger_now
wait_on_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]
display_hw_ila_data [upload_hw_ila_data [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
run_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}] -trigger_now
wait_on_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]
display_hw_ila_data [upload_hw_ila_data [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
refresh_hw_device [lindex [get_hw_devices] 1]
display_hw_ila_data [ get_hw_ila_data hw_ila_data_1 -of_objects [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
run_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}] -trigger_now
wait_on_hw_ila [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]
display_hw_ila_data [upload_hw_ila_data [get_hw_ilas -of_objects [get_hw_devices xc7z010_1] -filter {CELL_NAME=~"z_eth_wrapper_inst/z_eth_i/ila_0"}]]
open_bd_design {D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd}
startgroup
set_property -dict [list CONFIG.c_mm2s_burst_size {256} CONFIG.c_s2mm_burst_size {256}] [get_bd_cells axi_dma_0]
endgroup
save_bd_design
reset_run synth_1
reset_run z_eth_axi_ethernet_0_0_synth_1
reset_run z_eth_axi_dma_0_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
file copy -force D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.sysdef D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf

startgroup
set_property -dict [list CONFIG.PCW_FPGA1_PERIPHERAL_FREQMHZ {125} CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {DDR PLL}] [get_bd_cells processing_system7_0]
endgroup
save_bd_design
reset_run synth_1
reset_run z_eth_processing_system7_0_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
startgroup
set_property -dict [list CONFIG.PCW_FCLK0_PERIPHERAL_CLKSRC {IO PLL} CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {IO PLL}] [get_bd_cells processing_system7_0]
endgroup
delete_bd_objs [get_bd_cells ila_0]
startgroup
set_property -dict [list CONFIG.PCW_SPI0_PERIPHERAL_ENABLE {1}] [get_bd_cells processing_system7_0]
endgroup
delete_bd_objs [get_bd_nets axis_counter_direct_M_AXIS_TDATA] [get_bd_nets axis_counter_direct_M_AXIS_TLAST] [get_bd_nets axis_counter_direct_M_AXIS_TKEEP] [get_bd_nets Net] [get_bd_nets axis_counter_direct_M_AXIS_TVALID]
connect_bd_intf_net [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM] [get_bd_intf_pins axis_counter_direct/M_AXIS]
regenerate_bd_layout
validate_bd_design
save_bd_design
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0
endgroup
delete_bd_objs [get_bd_cells axi_quad_spi_0]
set_param general.MaxThreads 4
set_param general.NumThreads 4
generate_target all [get_files  D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd]
export_ip_user_files -of_objects [get_files D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd] -no_script -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd]
reset_run z_eth_axi_ethernet_0_0_synth_1
launch_run -jobs 2 {z_eth_axi_ethernet_0_0_synth_1 z_eth_auto_pc_0_synth_1 z_eth_auto_us_0_synth_1 z_eth_auto_us_1_synth_1 z_eth_auto_us_2_synth_1 z_eth_auto_pc_1_synth_1 z_eth_auto_pc_2_synth_1 z_eth_auto_us_3_synth_1 z_eth_auto_us_4_synth_1 z_eth_auto_us_5_synth_1}
export_simulation -of_objects [get_files D:/Projects/z_eth_2/z_eth.srcs/sources_1/bd/z_eth/z_eth.bd] -directory D:/Projects/z_eth_2/z_eth.ip_user_files/sim_scripts -ip_user_files_dir D:/Projects/z_eth_2/z_eth.ip_user_files -ipstatic_source_dir D:/Projects/z_eth_2/z_eth.ip_user_files/ipstatic -force -quiet
file copy -force D:/Projects/z_eth_2/z_eth.runs/impl_1/z_eth_top.sysdef D:/Projects/z_eth_2/z_eth.sdk/z_eth_top.hdf

