
#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xgpiops.h"
#include "xparameters.h"


int main()
{
    init_platform();
    XGpioPs led_gpio;
    XGpioPs_Config* cfg;
    cfg = XGpioPs_LookupConfig(XPAR_XGPIOPS_0_DEVICE_ID);
    if (!cfg){
    	xil_printf("Failed");
    	return XST_FAILURE;
    }

    u32 xstatus = 0;
    xstatus = XGpioPs_CfgInitialize(&led_gpio, cfg, cfg->BaseAddr);
    if (xstatus != XST_SUCCESS){
    	return XST_FAILURE;
    }
    int i = 0;
    int delay = 0;
    for (i = 0; i < 128; i++){
		XGpioPs_SetDirectionPin(&led_gpio, i, 1);
		XGpioPs_SetOutputEnablePin(&led_gpio, i, 1);
			xil_printf("Current: %d", i);
			XGpioPs_WritePin(&led_gpio, i, 0x1);
			for(delay = 0 ; delay < 100000000; delay ++);
			XGpioPs_WritePin(&led_gpio, i, 0x0);
			for(delay = 0 ; delay < 100000000; delay ++);
			XGpioPs_WritePin(&led_gpio, i, 0x1);
			for(delay = 0 ; delay < 100000000; delay ++);
			XGpioPs_WritePin(&led_gpio, i, 0x0);
			for(delay = 0 ; delay < 100000000; delay ++);
    }
		print("Hello World\n\r");

    cleanup_platform();
    return 0;
}
